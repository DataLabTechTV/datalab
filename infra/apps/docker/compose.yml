services:
  mlserver:
    build:
      context: ../../../
      dockerfile: infra/apps/docker/mlserver/Dockerfile
    ports:
      - "8000:8000"
    environment:
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      KAFKA_BROKER_ENDPOINT: ${KAFKA_BROKER_ENDPOINT}

      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_USE_SSL: ${S3_USE_SSL}
      S3_URL_STYLE: ${S3_URL_STYLE}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_REGION: ${S3_REGION}

      S3_BUCKET: ${S3_BUCKET}
      S3_STAGE_PREFIX: ${S3_STAGE_PREFIX}
      S3_SECURE_STAGE_PREFIX: ${S3_SECURE_STAGE_PREFIX}
      S3_GRAPHS_MART_PREFIX: ${S3_GRAPHS_MART_PREFIX}
      S3_ANALYTICS_MART_PREFIX: ${S3_ANALYTICS_MART_PREFIX}
      S3_EXPORTS_PREFIX: ${S3_EXPORTS_PREFIX}
      S3_BACKUPS_PREFIX: ${S3_BACKUPS_PREFIX}

      PSQL_CATALOG_HOST: ${PSQL_CATALOG_HOST}
      PSQL_CATALOG_PORT: ${PSQL_CATALOG_PORT}
      PSQL_CATALOG_DB: ${PSQL_CATALOG_DB}
      PSQL_CATALOG_USER: ${PSQL_CATALOG_USER}
      PSQL_CATALOG_PASSWORD: ${PSQL_CATALOG_PASSWORD}
      PSQL_CATALOG_STAGE_SCHEMA: ${PSQL_CATALOG_STAGE_SCHEMA}
      PSQL_CATALOG_SECURE_STAGE_SCHEMA: ${PSQL_CATALOG_SECURE_STAGE_SCHEMA}
      PSQL_CATALOG_GRAPHS_MART_SCHEMA: ${PSQL_CATALOG_GRAPHS_MART_SCHEMA}
      PSQL_CATALOG_ANALYTICS_MART_SCHEMA: ${PSQL_CATALOG_ANALYTICS_MART_SCHEMA}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      retries: 5
    restart: unless-stopped
