services:
  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_ACCESS_KEY}
    volumes:
      - minio:/data
    networks:
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      retries: 5
    restart: unless-stopped
    command: server /data --console-address ":9001"

  minio-mc:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    networks:
      - minio
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 $S3_ACCESS_KEY_ID $S3_SECRET_ACCESS_KEY;
      /usr/bin/mc mb --ignore-existing minio/${S3_BUCKET};
      "
    restart: no

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    networks:
      - ollama
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    runtime: nvidia
    healthcheck:
      test: ["CMD", "ollama", "ls"]
      interval: 10s
      retries: 3
    restart: unless-stopped

  ollama-models:
    image: alpine/curl:latest
    networks:
      - ollama
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      MODELS: ${OLLAMA_MODELS}
    entrypoint: |
      /bin/sh -c '
      IFS=,; set -- $${MODELS};
      for model in "$$@"; do
        echo "==> Downloading model: $$model"
        curl -X POST http://ollama:11434/api/pull \
          -H "Content-Type: application/json" \
          -d "{\"name\": \"$$model\"}"
      done
      '
    restart: no

  mlflow:
    build:
      context: ./docker/mlflow
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - mlflow:/mlflow
    networks:
      - mlflow
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://${S3_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: ${S3_REGION}
      AWS_S3_ADDRESSING_STYLE: ${S3_URL_STYLE}
    command: >
      mlflow server
        --backend-store-uri sqlite:///mlflow/mlflow.db
        --serve-artifacts
        --artifacts-destination s3://${S3_MLFLOW_BUCKET}/${S3_MLFLOW_ARTIFACTS_PREFIX}
        --host 0.0.0.0
        --port 5000
    healthcheck:
      test: [
        "CMD",
        "curl",
        "-f",
        "http://localhost:5000/api/2.0/mlflow/experiments/list"
      ]
      interval: 10s
      retries: 5
    restart: unless-stopped

volumes:
  minio:
  ollama:
  mlflow:

networks:
  ollama:
  minio:
  mlflow:
